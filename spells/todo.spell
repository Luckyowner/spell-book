#!/bin/sh
# Write/remove a task to do later.
#
# Select an existing entry to remove it from the file, or type a new entry to
# add it.

selector() {
    while [ "$#" -gt 0 ]; do
        case "$1" in
            -l) listsize="$2" ;;
            -p) prompt="$2" ;;
        esac
        shift
    done
    case "$PROMPT_PROG" in
        fzf) fzf -i --prompt "$prompt " --print-query | tail -1 ;;
        dmenu) dmenu -i -p "$prompt" -l "$listsize" ;;
    esac
}

error() {
    title=$1
    shift
    case "$PROMPT_PROG" in
        fzf) printf "[1;31mError:[0m[1m %s[0m\n%s\n" "$title" "$*" ;;
        dmenu) notify-send "Error: $title" "$*" -u critical -a todo ;;
    esac
}

todo() {
    case "$(hostname)" in
        kaladesh) f=-E ;;
        localhost) f=-vF ;;
        *) f=-Ev ;;
    esac
    LC_ALL=C sort "$file" | grep $f '^work'
}

pull() {
    o="$(rsync --update --timeout=5 mirrodin:todo "$CACHE" 2>&1)" || error "Download failed" "$o"
}

while [ "$#" -gt 0 ]; do
    case "$1" in
        gui) gui=1 ;;
        -l | --list) list=1 ;;
        -b | --bg-pull) bg_pull=1 ;;
    esac
    shift
done

CACHE="${XDG_CACHE_HOME:-~/.cache}"
file="$CACHE/todo"
if [ "$bg_pull" ]; then
    pull &
    [ -e "$file" ] || exit
else
    pull
fi
[ -f "$file" ] || exit 1
touch "$file"
height=$(wc -l <"$file")
prompt="Add/delete a task: "

if [ ! "$DISPLAY" ] || [ ! "$gui" ]; then
    PROMPT_PROG=fzf
else
    PROMPT_PROG=dmenu
fi

if [ "$list" ]; then
    case "$PROMPT_PROG" in
        fzf) todo ;;
        dmenu) notify-send 'Todo list' "$(todo)" -a todo ;;
    esac
else
    while :; do
        cmd=$(todo | selector -l "$height" -p "$prompt")
        [ "$cmd" ] || break
        if [ "$(s="$cmd" awk 'substr($0, 1, length(ENVIRON["s"])) == ENVIRON["s"] { print }' "$file")" ]; then
            s="$cmd" awk 'substr($0, 1, length(ENVIRON["s"])) != ENVIRON["s"] { print }' "$file" >"$file.$$"
            mv "$file.$$" "$file"
            height=$((height - 1))
        else
            echo "$cmd" >>"$file"
            height=$((height + 1))
        fi
    done
    o="$(rsync --update --timeout=5 "$file" mirrodin: 2>&1)" || error "Upload failed" "$o"
fi
