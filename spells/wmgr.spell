#!/bin/bash
# shellcheck disable=SC2029

TMPDIR=${TMPDIR:-/tmp}
set -e
yellow() {
    echo -e "\e[32m$*\e[0m"
}

blue() {
    echo -e "\e[34m$*\e[0m"
}

error_selfish() {
    cat <<EOF
    Option $1 is selfish and can't be used with other non-selfish host options
EOF

    exit 1
}

help_message() {
    cat <<EOF
Wallpaper Manager

Usage
    $(basename "$0") [OPTIONS] wallpaper

Options
    -d
        Delete instead of adding
    -r
        Replace an existing one
    -w
        Add wallpaper to the weatherlight collection
    -T
        Add wallpaper only to the tolaria collection (selfish)
    -p
        Add wallpaper to the powerstone collection
    -P
        Add wallpaper only to the powerstone collection (selfish)
    -n name
        Specifiy the wallpaper's name
    -s --sync
        Download missing wallpapers
EOF

    exit 1
}

process_params() {
    [ -z "$name" ] && name="$(basename "$wall")"
    ext="${wall##*.}"
    [[ ! "$name" =~ .*$ext$ ]] && name="$name.$ext"

    case "$mode" in
        add)
            case "$wall" in
                http*)
                    wget --no-verbose "$wall" -O "$TMPDIR/$name"
                    wall="$TMPDIR/$name"
                    ;;
            esac
            if [[ "${host[0]}" = Powerstone ]]; then
                wall_dir=PhoneCollection
            else
                wall_dir=Wallpapers
            fi
            yellow "Sending $name to $wall_dir"
            if [[ "$replace" ]]; then
                ssh mirrodin test '!' -e "'Pictures/$wall_dir/$name'" &&
                    echo 'A wallpaper with that name doesn'\'' exist' &&
                    return 1
                ssh mirrodin touch -r "'Pictures/$wall_dir/$name'" "/tmp/reference"
            else
                ssh mirrodin test -e "'Pictures/$wall_dir/$name'" &&
                    echo 'A wallpaper with that name doesn'\''t exist' &&
                    return 1
            fi
            scp "$wall" "mirrodin:Pictures/$wall_dir/$name"
            [[ "$replace" ]] && ssh mirrodin touch -r /tmp/reference "'Pictures/$wall_dir/$name'"
            case "${host[0]}" in Powerstone | Tolaria) return 0 ;; esac
            for h in "${host[@]}"; do
                case "$h" in
                    weatherlight | matess)
                        blue "Creating symlink"
                        ssh mirrodin \
                            "ln -sfv ~/Pictures/Wallpapers/$name ~/Pictures/LaptopCollection"
                        [[ "$(hostname)" != "tolaria" ]] && cp -v "$wall" "$WALLPAPERS/$name"
                        ;;
                    powerstone)
                        blue "Creating symlink"
                        ssh mirrodin \
                            "[ -e Pictures/PhoneCollection/$name ] && \
                             [ ! -h Pictures/PhoneCollection/$name ]" &&
                            echo -e "A \e[34mnon link\e[0m wallpaper with that name already exists" &&
                            return 1
                        ssh mirrodin "ln -sfv ~/Pictures/Wallpapers/$name ~/Pictures/PhoneCollection"
                        ;;
                esac
            done
            ;;
        delete)
            [ -z "$wall" ] && wall="$(find "$WALLPAPERS" -type f -printf '%T@ %p\n' |
                sort -n |
                cut -d' ' -f2- |
                sxiv -i -g 1800x1000 -b -t -o)"
            case "${host[0]}" in
                Powerstone) local filter=PhoneCollection
            esac
            for w in $wall; do
                ssh mirrodin \
                    "find Pictures/$filter -type l,f -name '$(basename "$w")' | xargs -r rm -v" |
                    sed "s/'/'mirrodin:/"

                [ "$(hostname)" = tolaria ] || { [ -w "$w" ] && rm -v "$w"; }
            done
            ;;
    esac
    :
}

mode=add
while [ "$#" -gt 0 ]; do
    case "$1" in
        -w)
            [ -n "$selfish" ] && error_selfish "$selfish"
            host+=(weatherlight)
            ;;
        -T)
            host=(Tolaria)
            selfish=-T
            ;;
        -p)
            [ -n "$selfish" ] && error_selfish "$selfish"
            host+=(powerstone)
            ;;
        -P)
            host=(Powerstone)
            selfish=-P
            ;;
        -d)
            mode=delete
            ;;
        -h)
            wall=""
            break
            ;;
        -n)
            shift
            name="$(basename "$1")"
            ;;
        -s | --sync)
            sync=1
            ;;
        -r | --replace)
            replace=1
            ;;
        -*)
            echo "$0: $1: not a valid option"
            help_message
            ;;
        *)
            wall="$1"
            ;;
    esac
    shift
done
if [ ${#host} -lt 1 ]; then
    host=("$(hostname)")
fi

if [ "$mode" != delete ] && [ -z "$wall" ]; then
    if [ -z "$sync" ]; then
        help_message
    else
        mode=sync
    fi
fi

process_params || exit 1
if [ "$sync" ]; then
    endpoint="mendess.xyz"
    mkdir -p "$WALLPAPERS"
    cd "$WALLPAPERS" || exit 1
    [ "$(hostname)" = localhost ] && is_phone="/phone"
    curl --silent "$endpoint/walls$is_phone" |
        grep '<a' |
        cut -d"'" -f4 |
        while read -r f; do
            if [ ! -e "$(basename "$f")" ]; then
                echo -n "Downloading $endpoint$f ..."
                wget --quiet "http://$endpoint/$f"
                echo ' Done'
            fi
        done
    echo 'Synced'
fi
