#!/bin/bash
set -x
monitors=()
while read -r mon; do
    read -ra geometry < <(echo "$mon" | tr 'x+' ' ')
    echo "${geometry[@]}"
    echo "${geometry[@]}"
    monitors+=("${geometry[0]}x0+${geometry[2]}+${geometry[3]}")
done < <(xrandr --listactivemonitors |
    sed 1d |
    cut -d' ' -f4 |
    sed -E 's|/[0-9]+||g' |
    sort -n)

case "${#monitors[@]}" in
    1)
        bspc monitor -d 1 2 3 4 5 6 7 8 9 0
        ;;
    2)
        case "$(hostname)" in
            tolaria)
                bspc monitor -o DVI-D-0 DVI-I-1
                bspc monitor ^1 -d 1 2 3 4
                bspc monitor ^2 -d 5 6 7 8 9 0
                ;;
            weatherlight | matess)
                bspc monitor ^1 -d 1 2 3 4 5
                bspc monitor ^2 -d 6 7 8 9 0
                ;;
            *)
                bspc monitor ^1 -d 1 2 3 4 5 6 7 8
                bspc monitor ^2 -d 9 0
                ;;
        esac
        ;;
    3)
        bspc monitor ^1 -d 1 2 3
        bspc monitor ^2 -d 4 5 6
        bspc monitor ^3 -d 7 8 9 0
        ;;
    4)
        bspc monitor ^1 -d 1
        bspc monitor ^2 -d 2 3 4
        bspc monitor ^3 -d 5 6 7
        bspc monitor ^4 -d 8 9 0
        ;;
esac

if [[ "$(hostname)" = tolaria ]]; then
    bspc config window_gap 7
    bspc config border_width 5
else
    bspc config window_gap 4
    bspc config border_width 3
fi

bspc config split_ratio 0.5
bspc config borderless_monocle false
bspc config gapless_monocle false
# bspc config remove_unplugged_monitors true
bspc config top_padding 22
bspc config ignore_ewmh_focus true

xsetroot -cursor_name left_ptr
bspc rule -a floating-terminal state=floating
bspc rule -a feh state=floating
bspc rule -a URxvt state=floating
bspc rule -a Sxiv state=floating
bspc rule -a my-media-player desktop=^10
bspc rule -a Steam desktop=^3 state=pseudo_tiled
bspc rule -a Zathura state=tiled
bspc rule -a Surf state=tiled
bspc rule -a Wine state=pseudo_tiled
# bspc rule -a zoom state=pseudo_tiled desktop=^3
bspc rule -a zoom desktop=^3
bspc rule -a spotify state=pseudo_tiled rectangle=803x70+0+0
bspc rule -a jetbrains-toolbox state=floating
bspc rule -a jetbrains-idea state=pseudo_tiled
# bspc rule -a discord desktop=^1 state=pseudo_tiled

pkill sxhkd
sxhkd &>/tmp/sxhkd.log &
disown

# if ! pgrep polybar
# then
#     for m in $(xrandr --query | grep " connected" | cut -d" " -f1); do
#         MONITOR=$m polybar --reload example &
#     done
# fi
#[ -e "$PANEL_FIFO" ] && bspc subscribe report > "$PANEL_FIFO" &
pgrep -x lemon && killall lemon
if [ ! -e ~/.config/lemonbar/lemon ] ||
    [ ~/.config/lemonbar/lemon -ot ~/.config/lemonbar/lemon.rs ]; then
    if rustc ~/.config/lemonbar/lemon.rs -o ~/.config/lemonbar/lemon >/tmp/compiled_bar 2>&1; then
        echo "compiled"
        notify-send 'Recompiled wrapper' -a bspwmrc
    else
        echo "failed to compile"
        notify-send 'Failed to compile' -u critical -a bspwmrc
        exit
    fi
fi

bar_args=()
for mon in "${monitors[@]}"; do
    echo "$mon"
    bar_args+=('--bar' "${mon}")
done
~/.config/lemonbar/lemon --tray "${bar_args[@]}" &

sleep 1.5
until bar_id=$(xdo id -a 'bar_of_the_lemons'); do
    sleep 0.001
done
for bar in $bar_id; do
    xdo below -t "$(xdo id -n root)" "$bar"
done
until systray_id=$(xdo id -N 'trayer'); do
    sleep 0.001
done
xdo below -t "$(xdo id -n root)" "$systray_id"
pkill bspswallow || ~/.config/bspwm/bspswallow &
