#!/bin/bash

hc() {
    herbstclient "$@"
}

daemonise() { (
    # Close all but stdio
    local self=$BASHPID
    [[ "$1" = sxhkd ]] && find /proc/$self/fd -type l -printf '%f\n'
    # The following will even try to close the fd for the find sub
    # shell although it is already closed. (0: stdin, 1: stdout, 2:
    # stderr, 3: find)
    while read -r n; do
        if ((n > 2)); then
            [[ "$1" = sxhkd ]] && echo "closing $n"
            eval "exec $n>&-"
        fi
    done < <(find /proc/$self/fd -type l -printf '%f\n')
    "$@" &
); }

hc emit_hook reload

# remove all existing keybindings
hc keyunbind --all

Mod=Mod4 # Use the super key as the main modifier

hc keybind $Mod-Shift-q close
hc keybind $Mod-Control-q remove
hc keybind $Mod-Shift-F5 reload

# basic movement in tiling and floating mode
# focusing clients
hc keybind $Mod-h focus left
hc keybind $Mod-j focus down
hc keybind $Mod-k focus up
hc keybind $Mod-l focus right

# moving clients in tiling and floating mode
hc keybind $Mod-Shift-h shift left
hc keybind $Mod-Shift-j shift down
hc keybind $Mod-Shift-k shift up
hc keybind $Mod-Shift-l shift right

# splitting frames
# create an empty frame at the specified direction
# hc keybind $Mod-u split bottom 0.5
# hc keybind $Mod-o split right 0.5
# let the current frame explode into subframes
hc keybind $Mod-Control-space split explode

# resizing frames and floating clients
resizestep=0.02
hc keybind $Mod-Control-h resize left +$resizestep
hc keybind $Mod-Control-j resize down +$resizestep
hc keybind $Mod-Control-k resize up +$resizestep
hc keybind $Mod-Control-l resize right +$resizestep

# tags
tag_names=({1..9})
tag_keys=({1..9} 0)

hc rename default "${tag_names[0]}" || true
for i in "${!tag_names[@]}"; do
    hc add "${tag_names[$i]}"
    key="${tag_keys[$i]}"
    if [ "$key" ]; then
        hc keybind "$Mod-$key" use_index "$i"
        hc keybind "$Mod-Shift-$key" move_index "$i"
    fi
done

# cycle through tags
hc keybind $Mod-Tab use_index +1 --skip-visible
hc keybind $Mod-Shift-Tab use_index -1 --skip-visible

# layouting
hc keybind $Mod-Shift-space floating toggle
hc keybind $Mod-f fullscreen toggle
hc keybind $Mod-Shift-f set_attr clients.focus.floating toggle
hc keybind $Mod-Shift-m set_attr clients.focus.minimized true
# restore all minimized windows of the focused tag
hc keybind $Mod-Ctrl-m foreach CLIENT clients. \
    sprintf MINATT "%c.minimized" CLIENT \
    sprintf TAGATT "%c.tag" CLIENT and \
    , compare MINATT "=" "true" \
    , substitute FOCUS "tags.focus.name" compare TAGATT "=" FOCUS \
    , set_attr MINATT false
hc keybind $Mod-apostrophe pseudotile toggle
# The following cycles through the available layouts within a frame, but skips
# layouts, if the layout change wouldn't affect the actual window positions.
# I.e. if there are two windows within a frame, the grid layout is skipped.
hc keybind $Mod-e \
    or , and . compare tags.focus.curframe_wcount = 2 \
    . cycle_layout +1 vertical horizontal max vertical grid \
    , cycle_layout +1
hc keybind $Mod-r rotate

# mouse
hc mouseunbind --all
hc mousebind $Mod-Button1 move
hc mousebind $Mod-Button2 zoom
hc mousebind $Mod-Button3 resize

# focus
# hc keybind $Mod-BackSpace cycle_monitor
# hc keybind $Mod-Tab cycle_all +1
# hc keybind $Mod-Shift-Tab cycle_all -1
# hc keybind $Mod-r cycle
# hc keybind $Mod-i jumpto urgent

# theme
hc attr theme.tiling.reset 1
hc attr theme.floating.reset 1
hc set frame_border_active_color '#222222'
hc set frame_border_normal_color '#101010'
hc set frame_bg_normal_color '#565656'
hc set frame_bg_active_color '#345F0C'
hc set frame_border_width 1
hc set always_show_frame on
hc set frame_bg_transparent on
hc set frame_transparent_width 5
hc set frame_gap 4

hc attr theme.title_height 15
hc attr theme.title_font 'Dejavu Sans:pixelsize=12' # example using Xft
# hc attr theme.title_font '-*-fixed-medium-r-*-*-13-*-*-*-*-*-*-*'
hc attr theme.padding_top 2 # space below the title's baseline (i.e. text depth)
hc attr theme.active.color '#9fbc00'
hc attr theme.normal.color '#454545'
hc attr theme.urgent.color orange
hc attr theme.inner_width 1
hc attr theme.inner_color black
hc attr theme.border_width 3
hc attr theme.floating.border_width 4
hc attr theme.floating.outer_width 1
hc attr theme.floating.outer_color black
hc attr theme.active.inner_color '#3E4A00'
hc attr theme.active.outer_color '#3E4A00'
hc attr theme.background_color '#141414'

hc set window_gap 0
hc set frame_padding 0
hc set smart_window_surroundings off
hc set smart_frame_surroundings on
hc set mouse_recenter_gap 0

# rules
hc unrule -F
#hc rule class=XTerm tag=3 # move all xterms to tag 3
hc rule focus=on # normally focus new clients
hc rule floatplacement=smart
#hc rule focus=off # normally do not focus new clients
# give focus to most common terminals
#hc rule class~'(.*[Rr]xvt.*|.*[Tt]erm|Konsole)' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' floating=on
hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off

hc set tree_style '╾│ ├└╼─┐'

# unlock, just to be sure
hc unlock

# do multi monitor setup here, e.g.:
# hc set_monitors 1280x1024+0+0 1280x1024+1280+0
# or simply:
hc detect_monitors


pkill sxhkd
daemonise sxhkd -c ~/tmp-wm-swap/sxhkdrc -r /tmp/sxhkd.log -s /tmp/sxhkd.fifo

